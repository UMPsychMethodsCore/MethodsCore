DKinit
lm --help
help(lm)
a
master
help(size)
a
length(master)
size(master)
model.formula
model.fit
lm(model.formula.master)
lm(model.formula.master)
TYPE
meanFD
install.package()
install.package()
install
install.package
install.package()
install.package()
install.packages()
library('AnalyzeFMRI')
library(help=AnalyzeFMRI)
?st2xyzt
?st2xyzt
?analyze2nifti
?analyze2nifti
f.read.nifti.volume()
x = f.read.nifti.volume('/net/data4/ADHD/FirstLevel/ReHo_results/Trial1/KKI/1652369/session_1/kcc_map_0001.nii')
class(x)
x
dim(x)
attr(x)
attributes(x)
class(x)
inherits(x)
is.matrix(x)
is.list(x)
x = f.read.nifti.volume('/net/data4/ADHD/FirstLevel/ReHo_results/Trial1/KKI/1652369/session_1/kcc_map_0001.nii')
y = f.read.nifti.header('/net/data4/ADHD/FirstLevel/ReHo_results/Trial1/KKI/1652369/session_1/kcc_map_0001.nii')
y
class(y)
y
names(y)
y$vox.offset
y$qform.code
y$dim.info
y$dim
y$sform.code
y$intent.p1
y$intent.p2
y$intent.p3
names(y)
head(y)
y
x = f.read.nifti.volume('/net/data4/ADHD/FirstLevel/ReHo_results/Trial1/KKI/3154996/session_1/kcc_map_0001.nii')
x = f.read.nifti.header('/net/data4/ADHD/FirstLevel/ReHo_results/Trial1/KKI/3154996/session_1/kcc_map_0001.nii')
x = f.read.nifti.volume('/net/data4/ADHD/FirstLevel/ReHo_results/Trial1/KKI/8083695/session_1/kcc_map_0001.nii')
x = f.read.nifti.volume('/net/data4/ADHD/FirstLevel/ReHo_results/Trial1/KKI/8083695/session_1/kcc_map_0001.nii')
help(c)
c()
name=c()
name
dim(name)
help(c)
c()
dim(master)
master[1,1]
master[1,2]
master[1,3]
master[1,4]
master[0,0]
master[3,3]
master[3,2]
help(paste)
length(master)
 dim(master,1)
 dim(master)
class(master)
help(dim)
 dim(master)[1]
 dim(master)[1]-1
Error: unexpected '}' in "}"
firstlevel.path
firstlevel.path='/net/data4/ADHD/FirstLevel/ReHo_results/Trial1/KKI/1018959/session_1/kcc_map_0001.nii'
f.read.nifti.volume(firstlevel.path)
f.read.nifti.volume(firstlevel.path);
a=[1 3; 3 4]
a=(1 3; 3 4 )
a = matrix(1:4,nrow=2)
a
a = matrix(1:4,nrow=2,byrow=TRUE)
a
a=matrix(nrow=10,10)
a
a=matrix(nrow=10,ncol=10)
a
a[1,] = c(1,2,3,4,5,6,7,8,9,10)
a
a=matrix(c(
c(1:5)
c(6:10)
a=matrix(c(
c(1:5),
c(6:10),
),nrow=2)
matrix(1:10,nrow=2)
a=matrix(c(
c(1:5),
c(6:10)
),nrow=2)
a
1:5
c(1:5)
firstlevel.path
reho.firstlevel
reho.firstlevel)
dim(reho.firstlevel)
help(matrix)
is.matrix(reho.firstlevel)
class(reho.firstlevel)
help(array)
length(reho.firstlevel)
dim(reho.firstlevel)
array(reho.firstlevel,dim=length(reho.firstlevel))
test=array(reho.firstlevel,dim=length(reho.firstlevel))
dim(test)
dim(reho.firstlevel)
test=array(,dim=[53 63 46 dim(master)[1])
test=array(,dim=[53 63 46 776)
test=array(,dim=[53 63 46 776])
test=array(,dim=c(53,63))
dim(test)
test=array(,dim=c(53,63,46,1,776))
test[,,,,1]=reho.firstlevel
dim(test)
test(1,1,1,1,1)
test[1,1,1,1,1]
test[1,1,1,1,776]
test[1,1,1,6,776]
test[1,1,4,1,776]
test[1,1,4,1,1]
test[1,1,4,1,2]
test[43,34,4,1,1]
test[43,34,4,1,1]
a
a(1)
help(row.names)
x=y=3
x
y
help(data.frame)
help(save)
help(save)
help(array)
a=array(c(1:9),dim1=3,dim2=3,dim3=3)
a=array(c(1:9),dim=3)
a
a=array(c(1:9),dim=9)
a
a=array(c(1:9),dim=10)
a
a=array(c(1:9),dim=[1,2,3])
a=array(c(1:9),dim=(1,2,3))
a=array(c(1:9),dim=c(1,2,3))
a
a=array(c(1:9),dim=c(3,3,3))
a
a=array(c(1:27),dim=c(3,3,3))
a
c(a)
 c
array(c(a),dim=c(3,3,3))
help(rbind)
a=c(1:10)
a
b=(2:11)
rbind(a,b)
c=rbind(b)
c
c=rbind(a)
c
c=rbind(c,a)
c
rm(c)
c
rm(b)
b
rbind(b)
reho.dim=[53 63 76 1]
reho.dim=c(53 63 76 1)
reho.dim=c(53,63,76,1)
flatmat
dim(flatmat)
attributes(flatmat)
dim(flatmat)
dim(temp)
+ + + + + + + + + + + + + + + + + + + + + + + + + + 







}
}
head(master)
class(master$SUB_ID)
iSub
master[iSub,'SUB_ID']
?within
iSub$1
master$SITE <- ID
master$SITE_ID
row.names(master)
col.names(master)
data.frame(master)
?row.names
attr(master)
attributes(master)
attributes(master)$names
masterdata$names
masterdata$names
masterdata$names
attributes(masterdata)
?names
dim(master)
dim(masterdata)
iSub
master[iSub,SITE <- ID]
master[iSub,SITE_ID]
master[iSub,Subject]
attributes(masterdata)
masterdata[iSub,SITE_ID]
iSub
masterdata[1,SITE_ID]
masterdata[1,3]
masterdata[1,1]
masterdata[1,$SITE_ID]
attach masterdata
attach(masterdata)
masterdata[1,SITE_ID]
?attach
master$SITE_ID
masterdata$SITE_ID[iSub]
masterdata$SUB_ID[iSub]
?read.csv
 master[iSub,template.sub]
attributes(master)
attributes(masterdata)
dim(master)
dim(masterdata)
template.sub
 master[iSub,template.sub]
iSub
iSub=1
 master[iSub,template.sub]
 master[1,template.sub]
 master[146,template.sub]
 master[147,template.sub]
 master[14,template.sub]
 master[149,template.sub]
 master[776,template.sub]
 master[774,template.sub]
 master[148,template.sub]
 master[146,template.sub]
template.sub
names(master)
nrow(master)
master[,template.sub]
names(master)
master[,c('SUB_ID','Include.Overall')]
master$SUB_ID
master
masterdata
masterdata$Include.Overall
master$Include.
master$Include.Overall
masterdata$Include.Overall
master
is.na(master$SUB_ID)
sum(is.na(master$SUB_ID))
master[is.na(master$SUB_ID),]
sum(is.na(masterdata$Include.Overall))
sum(is.na(master$SUB_ID))
dim(master)
dim(masterdata)
?ifelse
dim(master)
dim(masterdata)
dim(master)
rm(master)
dim(master)
dim(master)
dim(master)
rm(master)
dim(master)
firstlevel.path
filecheck(firstlevel.path)
?filecheck
?filecheck
f.read.volume(firstlevel.path)
iSub
iSub=499
firstlevel.path
iSub=589
firstlevel.path
iSub=590
dim(flatmat)
dim(flatmat)
dim(master)
dim(flatmat)
flatmat[639,1:10]
flatmat[638,1:10]
flatmat[632,1:10]
nnzero(flatmat[639,])
iSub
reho.dim
attr(flatmat)
attributes(flatmat)
reho.dim
thing = array(dim=c(5,5,5,5))
rbind(thing,c(1,2,3)
)
mymatrix=matrix(1:10)
mymatrix
mymatrix[,2]=11:20
\
dim(flatmat)
attributes(flatmat)
iSub=1
attributes(flatmat)
subj.path
iSub
attributes(flatmat)
dim(flatmat)
class(flatmat)
ls()
names(master)
master$F4IQ
sum(is.na(master$meanFD))
sum(is.na(master$F4IQ))
sum(is.na(master$TYPE))
sum(is.na(master$AGE))
sum(is.na(master$GENDER))
names(master)
ls()
getwd()
design
dim(design)
names(design)
colnames(design)
ls()
class(massuni)
massuni
str(massuni)
results
names(results)
head(results$tvals)
dim(results$tvals)
hist(results$pvals[2,])
hist(results$tvals[2,])
dim(t.array)
names(results)
dim(t.array)
names(t.array)
row.names(results)
names(design)
row.names(design)
attributes(design)
dim(t.array)
 t.array
 t.array=results[2].tvals
 t.array=results[2]$tvals
dim(t.array)
 t.array=results$tvals
dim(t.array)
 t.array=results[2,]
rm(t.array)
 t.array=results[2,]
 t.array=results[2,:]
dim(t.array[2,])
 t.array=results$tvals
dim(t.array[2,])
dim(t.array)
dim(t.array[2,1])
t.array[2,1]
t.array[2,3]
t.array[2,23]
t.array
sum(is.nan(t.array))
sum(is.na(t.array))
 hist(results$tvals[2,])
 t.array=results$tvals[2,]
dim(t.array)
 hist(t.array)
class(t.array)
attributes(t.array)
sum(t.array)
dim(t.out)
max(t.out)
iSub
firstlevel.path
f.read.nifti.header(firstlevel.path)
min(t.out)
t.test=f.read.nifti.volume('/net/data4/ADHD/UnivariateConnectomics/Results/tval.nii')
t.test=f.read.nifti.volume('/net/data4/ADHD/UnivariateConnectomics/Results/tval.nii')
class(t.test)
dim(t.test)
attributes(t.test)
names(t.test)
?f.write.nifti 
?f.write.nifti 
