#!/bin/bash

# # # # # # # # # # # # # # # # # # 
#
# A command to run PCA on masks specified
# on the times-series data. This will produce
# a csv file that has the first column is the 
# mean of the time-series and the n'th other 
# columns are the PCA components - ranked.
#
# This command will build a script to run and will also 
# run the script in background.
#
#   e.g.    pcafMRI
#
#
#                         Robert C. Welsh
#                         Copyright 2005-2013
#
# pcafMRI
#
# # # # # # # # # # # # # # # # # #

#
# Main pcafMRI function.
#

VERSION="1.0"
VERSIONDATE="2013-04-01"

# Find out where the current command lives and execute some common code.

theFullCommand="$0 $*"
execDIR=`pwd`

# Find out where the current command lives and execute some common code.

theCommand=`which $0`
thisDir=`dirname $theCommand`

thisCommand=`echo $theCommand | awk -F/ '{print $NF}'`

allowedOptions="BDdFfhMNOpstUvw"

# This piece of code all of the spm8Batch scripts will use
. ${thisDir}/auxiliary/commonCode_AllScriptsStart

# This is the common in-line code for the PCA steps.
. ${thisDir}/auxiliary/commonCode_pcafMRI_01

# This is common in-line code for all spm8Batch script to make sure arguments were passed
. ${thisDir}/auxiliary/commonCode_checkIfArgsPassed

#
# The actual function.
#

. ${thisDir}/auxiliary/parse_arguments

#

. ${thisDir}/auxiliary/superDebugStatus

# Now check to see if they put in overrides for WM and CSF, or if they specified NONE

debugout "iother  : ${iother}"    $SuperDebugFLAG

if [ $iother -gt 0 ]
then
   WM_MASKWILD=${otherName[0]}
   debugout "changing WM_MASKWILD"     $SuperDebugFLAG
fi

if [ $iother -gt 1 ]
then 
   CSF_MASKWILD=${otherName[1]}
   debugout "changing CSF_MASKWILD"    $SuperDebugFLAG
fi

#
# Ok - let's start displaying things back to the terminal
#

. ${thisDir}/auxiliary/shellScriptInfo

#
# Prepare to write the script.
#

# Makes sure they speficied some subjects.
. ${thisDir}/auxiliary/checkInputForSubjects

# Write out debug status
. ${thisDir}/auxiliary/debugStatus

# Ok, lets do the business.

# Print out the list of subjects that we operate upon.
. ${thisDir}/auxiliary/printSubjectsList

# Now start building the automatic scripts.

#
# the following environmental variables are from spm8Batch_Global
#
#    HOSTCOMPUTER     - name of the computer.
#    SCRIPTNAME       - name of the scripts to write.
#    MATLABDIR        - location of the scripts.
#    UMBatchMatcher   - present working directory.
#    FULLSCRIPTNAME   - full path and name of scripts to write.
# 

. ${thisDir}/auxiliary/pcafMRI_01

# Name of the functional volumes to find.

echo "UMVolumeWild  = '${volumeWILD}';"                   >> ${FULLSCRIPTNAME}.m

# Now build the list of directories for each subject.

. ${thisDir}/auxiliary/createDirectoryList

echo " UMHighRes    = {..."                               >> ${FULLSCRIPTNAME}.m
for (( is=1 ; is<=$nSubjects ; is++ ))
do
    
  #
  # Make sure that now the HIRES exists.
  #
    
    TARGETNAME=${UMBatchMaster}/${SUBJDIR}/${subjects[$is]}/${fmriPATH}/${coregPATH}/${HIRESNAME}
    TARGETEXT=${overlayExt}
    
    . ${thisDir}/auxiliary/verifyTargetImage
    
    debugout "HiRes name is : ${TARGETIMG}"    $SuperDebugFLAG
    debugout "HiRes name is : ${HIRESNAME}"    $SuperDebugFLAG
    debugout "- - - - - - - - - - - - - - - -" $SuperDebugFLAG
    
    # Check for the WM and CSF mask images.
    
    WM_FILE=
    if [ "${WM_MASKWILD}" != "NONE" ]
    then
	WM_FILE=`ls ${UMBatchMaster}/${SUBJDIR}/${subjects[$is]}/${fmriPATH}/${coregPATH}/${WM_MASKWILD}*${HIRESNAME}.nii 2> /dev/null`
	if [ ! -e "${WM_FILE}" ]
	then
	    echo
	    echo "      * * * * * * * * * * * * * * * * * * * * * * * * "
	    echo "      * * * * "
	    echo "      * * * *   Missing WM mask for : ${subjects[$is]}"
	    echo "      * * * * "
	    echo "      * * * * * * * * * * * * * * * * * * * * * * * * "
	    echo
	    . ${thisDir}/auxiliary/exit_w_removal
	fi
    fi
    CSF_FILE=
    if [ "${CSF_MASKWILD}" != "NONE" ]
    then
	CSF_FILE=`ls ${UMBatchMaster}/${SUBJDIR}/${subjects[$is]}/${fmriPATH}/${coregPATH}/${CSF_MASKWILD}*${HIRESNAME}.nii 2> /dev/null`
	if [ ! -e "${CSF_FILE}" ]
	then
	    echo 
	    echo "      * * * * * * * * * * * * * * * * * * * * * * * * "
	    echo "      * * * * "
	    echo "      * * * *   Missing CSF mask for : ${subjects[$is]}"
	    echo "      * * * * "
	    echo "      * * * * * * * * * * * * * * * * * * * * * * * * "
	    echo
	    . ${thisDir}/auxiliary/exit_w_removal
	fi
    fi
    echo "'${WM_FILE}','${CSF_FILE}';..."                             >> ${FULLSCRIPTNAME}.m    
done

echo "                };"                                 >> ${FULLSCRIPTNAME}.m

. ${thisDir}/auxiliary/matlabVariables

echo "    4) finalizing matlab scripts"

cat ${thisDir}/parts/pcafMRI_part_2.m                     >> ${FULLSCRIPTNAME}.m

echo "    5) building shell script"


# Now build the shell script command that will get launched into the background.

# Common start to all shell scripts
. ${thisDir}/auxiliary/shellScriptStart

# Add the matlab code to the shell script

. ${thisDir}/auxiliary/shellScriptMATLABCall

# Finalize the shell script.

. ${thisDir}/auxiliary/shellScriptFinalize

# Now launch into the background if desired.

. ${thisDir}/auxiliary/shellScriptLaunch

#
# all done.
#
