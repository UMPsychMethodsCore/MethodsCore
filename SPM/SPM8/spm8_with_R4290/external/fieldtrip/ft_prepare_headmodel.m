function vol = ft_prepare_headmodel(cfg, mri)

% FT_PREPARE_HEADMODEL constructs a volume conduction model from
% the geometry of the head. The volume conduction model specifies how
% currents that are generated by sources in the brain, e.g. dipoles,
% are propagated through the tissue and how these result in externally
% measureable EEG potentials or MEG fields.
% 
% This function takes care of all the preparatory steps in the
% construction of the volume conduction model and sets it up so that
% subsequent computations are efficient and fast.
%
% The input to this function is a geometrical description of the
% shape of the head. If you pass a segmented anatomical MRI as input,
% the geometry will be based on that.
%
% Use as
%   vol = ft_prepare_headmodel(cfg)
% or
%   vol = ft_prepare_headmodel(cfg, mri)
% with a segmented anatomical MRI as second input (see FT_VOLUMESEGMENT).
%
% The configuration structure should contain
%   cfg.method = string that specifies the forward solution, see below
%
% FieldTrip implementes a variety of forward solutions, some of
% them using external toolboxes or executables. Each of the forward solutions requires a set of configuration options which are listed below.
%
% For EEG the following methods are available
%   singlesphere
%   bem_asa
%   bem_cp
%   bem_dipoli
%   bem_openmeeg
%   concentricspheres
%   halfspace
%   infinite
%
% For MEG the following methods are available
%   singlesphere
%   localspheres
%   singleshell
%   infinite

switch cfg.method
case 'bem_asa'
  vol = ft_headmodel_bem_asa()

case 'bem_cp'
  vol = ft_headmodel_bem_cp()

case 'bem_dipoli'
  vol = ft_headmodel_bem_dipoli()

case 'bem_openmeeg'
  vol = ft_headmodel_bem_openmeeg()

case 'concentricspheres'
  vol = ft_headmodel_concentricspheres()

case 'halfspace'
  vol = ft_headmodel_halfspace()

case 'infinite'
  vol = ft_headmodel_infinite()

case 'localspheres'
  vol = ft_headmodel_localspheres()

case 'singleshell'
  vol = ft_headmodel_singleshell()

case 'singlesphere'
  vol = ft_headmodel_singlesphere()

case 'simbio'
  cfg = [];
  cfg.method = 'simbio';
  [vol, cfg] = ft_prepare_femmodel(cfg,sens);
  
case 'fns'
  cfg = [];
  cfg.method = 'fns';
  [vol, cfg] = ft_prepare_femmodel(cfg,sens);  

otherwise
  error('unsupported method "%s"', cfg.method);
end

