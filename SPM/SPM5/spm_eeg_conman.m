function varargout = spm_eeg_conman(varargin)
% internal function that allows to enter componentwise contrast weights.
% FORMAT varargout = spm_eeg_conman(varargin)
% 
%_______________________________________________________________________
%
% The following comments are generated by the matlab guide-system:
% SPM_EEG_CONMAN M-file for spm_eeg_conman.fig
%      SPM_EEG_CONMAN, by itself, creates a new SPM_EEG_CONMAN or raises the existing
%      singleton*.
%
%      H = SPM_EEG_CONMAN returns the handle to a new SPM_EEG_CONMAN or the handle to
%      the existing singleton*.
%
%      SPM_EEG_CONMAN('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in SPM_EEG_CONMAN.M with the given input arguments.
%
%      SPM_EEG_CONMAN('Property','Value',...) creates a new SPM_EEG_CONMAN or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before spm_eeg_conman_OpeningFunction gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to spm_eeg_conman_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES
% Edit the above text to modify the response to help spm_eeg_conman
% Last Modified by GUIDE v2.5 18-Dec-2003 14:21:19
%_______________________________________________________________________
% Copyright (C) 2005 Wellcome Department of Imaging Neuroscience

% Stefan Kiebel
% $Id: spm_eeg_conman.m 539 2006-05-19 17:59:30Z Darren $


% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @spm_eeg_conman_OpeningFcn, ...
                   'gui_OutputFcn',  @spm_eeg_conman_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin & isstr(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before spm_eeg_conman is made visible.
function spm_eeg_conman_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to spm_eeg_conman (see VARARGIN)

% Choose default command line output for spm_eeg_conman
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);


% start of own code
if length(varargin) == 0
    try
        % called from contrast manager?
        h = findobj('Tag','ConMan');
        SPM = get(h, 'UserData');
    catch
        P = spm_select(1,'^SPM\.mat$','Select SPM.mat');
        load(P);
    end
else
    SPM = varargin{1};
end

% SPM colour scheme:
% background: [0.7 0.7 0.7]
% edit window background [0.8 0.8 1]
% buttons:  blue:    [0 0 1]
%           red:     [1 0 0]
%           green:   [0 1 0]
%           magenta: [1 0 1]
colour.background = [0.7 0.7 0.7];
set(handles.conman_eeg, 'Color', colour.background);

% code for re-sizing to actual screen size
WS = spm('WinScale');				%-Window scaling factors
FS = spm('FontSizes');				%-Scaled font sizes
PF = spm_platform('fonts');			%-Font names (for this platform)
if spm_matlab_version_chk('7') >= 0		%-Screen size
	S0 = get(0, 'MonitorPosition');
	S0 = S0(1,:);
else
	S0 = get(0,'ScreenSize');
end;

names = fieldnames(handles);
for i = 1:length(names)
    if ~strcmpi(names{i}, 'output')
        h = eval(sprintf('handles.%s;', names{i}));
        if length(h) == 1 & isnumeric(h)
            set(h, 'Position', get(h, 'Position').*WS);
            
            if ~strcmpi(get(h, 'Type'), 'figure')
                if strcmpi(get(h, 'Style'), 'Edit') | strcmpi(get(h, 'Style'), 'PushButton') | strcmpi(get(h, 'Style'), 'RadioButton')
                    eval(sprintf('set(handles.%s, ''FontSize'', FS(9));', names{i}));
                else
                    eval(sprintf('set(handles.%s, ''FontSize'', FS(10));', names{i}));
                end
            end    
        end
    end
end

if ~isfield(SPM, 'eeg')
    error('No design components found. Use the EEG model setup.');
    return;
end

handles.current_data = SPM;
guidata(hObject, handles);

% find out whether user wants t- or F-contrast weights
if get(findobj('Tag', 'D_TF', 'String', 't-contrast'), 'Value')
    STAT = 'T';
elseif get(findobj('Tag', 'D_TF', 'String', 'F-contrast'), 'Value')
    STAT = 'F';
else
    error('Could not identify STAT');
end

Mfactor = 8;
if SPM.eeg.Nfactors > Mfactor
    error('The component editor cannot handle more than 8 factors');
end

% adjust appearance to number of factors
%-----------------------------------------
% Hide uicontrols
s = [1:SPM.eeg.Nfactors];
for i = 1:Mfactor
    if ~ismember(i, s)
        eval(sprintf('set(handles.factor%d, ''Visible'', ''off'')', i))
        eval(sprintf('set(handles.factor%d_title, ''Visible'', ''off'')', i))
        eval(sprintf('set(handles.project%d, ''Visible'', ''off'')', i))
        eval(sprintf('set(handles.Generate%d, ''Visible'', ''off'')', i))
    else
        if strcmpi(STAT, 'T')
            eval(sprintf('set(handles.factor%d, ''Max'', 1)', i))
        else
            eval(sprintf('set(handles.factor%d, ''Max'', 2)', i))
        end
        
        % 'project' radiobuttons
        if strcmpi(SPM.eeg.factor{i}, 'time')
            eval(sprintf('set(handles.project%d, ''Value'', get(handles.project%d, ''Max''))', i, i))
        end
        
        % make buttons invisible, if design component identity or constant
        % exception for identity compoment which is titled 'time', i.e.
        % time factor in conventional design
        if strcmpi(SPM.xBF.name_d{1, i}, 'Identity') | strcmpi(SPM.xBF.name_d{1, i}, 'Constant')
            eval(sprintf('set(handles.project%d, ''Visible'', ''off'')', i))
            if ~strcmpi(SPM.eeg.factor{i}, 'time')
                eval(sprintf('set(handles.Generate%d, ''Visible'', ''off'')', i))
            end
        end
                
    end
end

eval(sprintf('pos1 = get(handles.factor%d, ''Position'');', Mfactor));
eval(sprintf('pos3 = get(handles.factor%d, ''Position'');', SPM.eeg.Nfactors));

dy = pos3(2) - pos1(2);

if dy > 0
    % adjust axes and uicontrols

    % figure
    pos = get(handles.conman_eeg, 'Position');
    pos(4) = pos(4) - dy;
    set(handles.conman_eeg, 'Position', pos);

    % contrast input windows
    for i = 1:SPM.eeg.Nfactors
        eval(sprintf('pos = get(handles.factor%d, ''Position'');', i));
        pos(2) = pos(2) - dy;
        eval(sprintf('set(handles.factor%d, ''Position'', [%f %f %f %f]);', i, pos(1), pos(2), pos(3), pos(4))) 
        
        eval(sprintf('pos = get(handles.factor%d_title, ''Position'');', i));
        pos(2) = pos(2) - dy;
        eval(sprintf('set(handles.factor%d_title, ''Position'', [%f %f %f %f]);', i, pos(1), pos(2), pos(3), pos(4))) 
        
        eval(sprintf('pos = get(handles.project%d, ''Position'');', i));
        pos(2) = pos(2) - dy;
        eval(sprintf('set(handles.project%d, ''Position'', [%f %f %f %f]);', i, pos(1), pos(2), pos(3), pos(4))) 

        eval(sprintf('pos = get(handles.Generate%d, ''Position'');', i));
        pos(2) = pos(2) - dy;
        eval(sprintf('set(handles.Generate%d, ''Position'', [%f %f %f %f]);', i, pos(1), pos(2), pos(3), pos(4))) 

    end
end

for i = 1:SPM.eeg.Nfactors
    % rename factor titles and set tooltipstrings
    eval(sprintf('set(handles.factor%d_title, ''String'', '' %s'');', i, SPM.eeg.factor{i}));
    eval(sprintf('set(handles.factor%d, ''ToolTipString'', ''Enter contrast vector/matrix for factor %s'');', i, SPM.eeg.factor{i}));
end

% switch off contrast weights editor of conventional conman
set(findobj('Tag', 'D_ConMtx'), 'Enable', 'off');


% UIWAIT makes spm_eeg_conman wait for user response (see UIRESUME)
% uiwait(handles.conman_eeg);


% --- Outputs from this function are returned to the command line.
function varargout = spm_eeg_conman_OutputFcn(hObject, eventdata, handles)
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;



% --- Executes during object creation, after setting all properties.
function factor1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to factor1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc
    set(hObject,'BackgroundColor','white');
else
    set(hObject,'BackgroundColor',get(0,'defaultUicontrolBackgroundColor'));
end

function factor1_Callback(hObject, eventdata, handles)
% hObject    handle to factor1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of factor1 as text
%        str2double(get(hObject,'String')) returns contents of factor1 as a double

% --- Executes during object creation, after setting all properties.
function factor2_CreateFcn(hObject, eventdata, handles)
% hObject    handle to factor2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc
    set(hObject,'BackgroundColor','white');
else
    set(hObject,'BackgroundColor',get(0,'defaultUicontrolBackgroundColor'));
end


function factor2_Callback(hObject, eventdata, handles)
% hObject    handle to factor2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of factor2 as text
%        str2double(get(hObject,'String')) returns contents of factor2 as a double

% --- Executes during object creation, after setting all properties.
function factor3_CreateFcn(hObject, eventdata, handles)
% hObject    handle to factor3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc
    set(hObject,'BackgroundColor','white');
else
    set(hObject,'BackgroundColor',get(0,'defaultUicontrolBackgroundColor'));
end



function factor3_Callback(hObject, eventdata, handles)
% hObject    handle to factor3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of factor3 as text
%        str2double(get(hObject,'String')) returns contents of factor3 as a double


% --- Executes during object creation, after setting all properties.
function factor4_CreateFcn(hObject, eventdata, handles)
% hObject    handle to factor4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc
    set(hObject,'BackgroundColor','white');
else
    set(hObject,'BackgroundColor',get(0,'defaultUicontrolBackgroundColor'));
end


function factor4_Callback(hObject, eventdata, handles)
% hObject    handle to factor4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of factor4 as text
%        str2double(get(hObject,'String')) returns contents of factor4 as a double

% --- Executes during object creation, after setting all properties.
function factor5_CreateFcn(hObject, eventdata, handles)
% hObject    handle to factor5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc
    set(hObject,'BackgroundColor','white');
else
    set(hObject,'BackgroundColor',get(0,'defaultUicontrolBackgroundColor'));
end



function factor5_Callback(hObject, eventdata, handles)
% hObject    handle to factor5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of factor5 as text
%        str2double(get(hObject,'String')) returns contents of factor5 as a double


% --- Executes during object creation, after setting all properties.
function factor6_CreateFcn(hObject, eventdata, handles)
% hObject    handle to factor6 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc
    set(hObject,'BackgroundColor','white');
else
    set(hObject,'BackgroundColor',get(0,'defaultUicontrolBackgroundColor'));
end


function factor6_Callback(hObject, eventdata, handles)
% hObject    handle to factor6 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of factor6 as text
%        str2double(get(hObject,'String')) returns contents of factor6 as a double

% --- Executes during object creation, after setting all properties.
function factor7_CreateFcn(hObject, eventdata, handles)
% hObject    handle to factor7 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc
    set(hObject,'BackgroundColor','white');
else
    set(hObject,'BackgroundColor',get(0,'defaultUicontrolBackgroundColor'));
end



function factor7_Callback(hObject, eventdata, handles)
% hObject    handle to factor7 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of factor7 as text
%        str2double(get(hObject,'String')) returns contents of factor7 as a double

% --- Executes during object creation, after setting all properties.
function factor8_CreateFcn(hObject, eventdata, handles)
% hObject    handle to factor8 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc
    set(hObject,'BackgroundColor','white');
else
    set(hObject,'BackgroundColor',get(0,'defaultUicontrolBackgroundColor'));
end



function factor8_Callback(hObject, eventdata, handles)
% hObject    handle to factor8 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of factor8 as text
%        str2double(get(hObject,'String')) returns contents of factor8 as a double


% --- Executes on button press in compute.
function compute_Callback(hObject, eventdata, handles)
% hObject    handle to compute (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% check lengths of all vectors/matrices and compute output
SPM = handles.current_data;

% get the contrast component vectors/matrices
for i = 1:SPM.eeg.Nfactors
    eval(sprintf('c{%d} = getappdata(handles.Generate%d, ''c'');', i, i));
    if isempty(c{i})
        eval(sprintf('str = get(handles.factor%d, ''String'');', i, i));

        for j = 1:size(str, 1)
            tmp{j} = str2num(str(j,:));
        end
        ml = 0;
        for j = 1:length(tmp)
            ml = max(ml, length(tmp{j}));
        end

        if ml == 0
            spm('alert*', sprintf('Input weights for factor %s', SPM.eeg.factor{i}))
            return;
        end

        c{i} = zeros(size(str, 1), ml);
        for j = 1:size(str, 1)
            c{i}(j, 1:length(tmp{j})) = tmp{j};
        end
    end
end

% check them
w = 0;
for i = 1:SPM.eeg.Nfactors
    eval(sprintf('Sp = get(handles.project%d, ''Value'');', i));
    if Sp
        c{i} = spm_eeg_contrast_project(SPM, i, c{i});
    elseif size(c{i}, 2) < size(SPM.eeg.X_d{1, i}, 2)
        c{i} = [c{i} zeros(size(c,1), size(SPM.eeg.X_d{1, i}, 2) - size(c{i}, 2))];
        eval(sprintf('set(handles.factor%d, ''String'', num2str(c{%d}));', i, i));
    elseif size(c{i}, 2) > size(SPM.eeg.X_d{1, i}, 2)
        warning('Wrong contrast vector length for factor %s', SPM.eeg.factor{i});
        w = 1;
    end
end

if ~w
    
    xCon = [];
    for i = 1:SPM.eeg.Nfactors
        xCon.eeg.Con{1, i} = c{i};
    end
    
    c_out = spm_eeg_contrast(SPM, xCon);

    % output
    handles.output.c_out = c_out;
    handles.output.c = c; % components

    % look for edit window of contrast manager
    h = findobj('Tag', 'D_ConMtx');
    if ~isempty(h)
        set(h, 'String', num2str(c_out));
        setappdata(handles.conman_eeg, 'c', c_out)
        spm_conman('D_ConMtx_CB')
    end
else
    handles.output = {};
end

% --- Executes on button press in reset.
function reset_Callback(hObject, eventdata, handles)
% hObject    handle to reset (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

SPM = handles.current_data;

for i = 1:SPM.eeg.Nfactors
    % remove strings from all factor windows
    eval(sprintf('set(handles.factor%d, ''String'', '''');', i));
    % remove components from Generate pushbuttons
    eval(sprintf('h = handles.Generate%d;', i));
    if isappdata(h, 'c')
        rmappdata(h, 'c');
    end
end

% --- Executes on button press in cancel.
function cancel_Callback(hObject, eventdata, handles)
% hObject    handle to cancel (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

delete(handles.conman_eeg);
set(findobj('Tag', 'D_ConMtx'), 'Enable', 'on');


% --- Executes on key press over conman_eeg with no controls selected.
function conman_eeg_KeyPressFcn(hObject, eventdata, handles)
% hObject    handle to conman_eeg (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in project1.
function project1_Callback(hObject, eventdata, handles)
% hObject    handle to project1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in project2.
function project2_Callback(hObject, eventdata, handles)
% hObject    handle to project2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of project2


% --- Executes on button press in radiobutton2.
function radiobutton2_Callback(hObject, eventdata, handles)
% hObject    handle to radiobutton2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of radiobutton2


% --- Executes on button press in project3.
function project3_Callback(hObject, eventdata, handles)
% hObject    handle to project3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of project3


% --- Executes on button press in project6.
function project6_Callback(hObject, eventdata, handles)
% hObject    handle to project6 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of project6


% --- Executes on button press in project5.
function project5_Callback(hObject, eventdata, handles)
% hObject    handle to project5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of project5


% --- Executes on button press in project7.
function project7_Callback(hObject, eventdata, handles)
% hObject    handle to project7 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of project7


% --- Executes on button press in project8.
function project8_Callback(hObject, eventdata, handles)
% hObject    handle to project8 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of project8


% --- Executes on button press in project4.
function project4_Callback(hObject, eventdata, handles)
% hObject    handle to project4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of project4


% --- Executes on button press in Generate1.
function Generate1_Callback(hObject, eventdata, handles)
% hObject    handle to Generate1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in Generate2.
function Generate2_Callback(hObject, eventdata, handles)
% hObject    handle to Generate2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

SPM = handles.current_data;
[c, xCon] = spm_eeg_contrast_generate(SPM);
set(handles.factor2, 'String', num2str(c));
setappdata(hObject, 'c', c);
set(handles.project2, 'Value', get(handles.project2, 'Max'));

% --- Executes on button press in Generate4.
function Generate4_Callback(hObject, eventdata, handles)
% hObject    handle to Generate4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in Generate6.
function Generate6_Callback(hObject, eventdata, handles)
% hObject    handle to Generate6 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in Generate8.
function Generate8_Callback(hObject, eventdata, handles)
% hObject    handle to Generate8 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in Generate3.
function Generate3_Callback(hObject, eventdata, handles)
% hObject    handle to Generate3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in Generate5.
function Generate5_Callback(hObject, eventdata, handles)
% hObject    handle to Generate5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in Generate7.
function Generate7_Callback(hObject, eventdata, handles)
% hObject    handle to Generate7 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

