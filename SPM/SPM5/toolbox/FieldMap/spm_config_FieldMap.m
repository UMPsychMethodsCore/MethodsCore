function job = spm_config_fieldmap
% Configuration file for FieldMap jobs
%_______________________________________________________________________
% Copyright (C) 2006 Wellcome Department of Imaging Neuroscience

% Chloe Hutton
% $Id: spm_config_FieldMap.m 1754 2008-05-29 13:56:00Z chloe $
%_______________________________________________________________________
entry = inline(['struct(''type'',''entry'',''name'',name,'...
        '''tag'',tag,''strtype'',strtype,''num'',num)'],...
        'name','tag','strtype','num');

files = inline(['struct(''type'',''files'',''name'',name,'...
        '''tag'',tag,''filter'',fltr,''num'',num)'],...
        'name','tag','fltr','num');

mnu = inline(['struct(''type'',''menu'',''name'',name,'...
        '''tag'',tag,''labels'',{labels},''values'',{values})'],...
        'name','tag','labels','values');

branch = inline(['struct(''type'',''branch'',''name'',name,'...
        '''tag'',tag,''val'',{val})'],...
        'name','tag','val');

repeat = inline(['struct(''type'',''repeat'',''name'',name,''tag'',tag,'...
         '''values'',{values})'],'name','tag','values');
     
choice = inline(['struct(''type'',''choice'',''name'',name,''tag'',tag,'...
         '''values'',{values})'],'name','tag','values');
%______________________________________________________________________

addpath(fullfile(spm('dir'),'toolbox','FieldMap'));

%------------------------------------------------------------------------
% File selection for Precalculated field map data (in Hz)
precalcfieldmap.type = 'files';
precalcfieldmap.name = 'Precalculated field map';
precalcfieldmap.tag  = 'precalcfieldmap';
precalcfieldmap.num  = [1 1];
precalcfieldmap.filter = 'image';
precalcfieldmap.help   = {['Select a precalculated field map. This should be a ',...
'processed field map (ie phase unwrapped, masked if necessary and scaled to Hz), ',...
'for example as generated by the FieldMap toolbox and stored as an fpm_* file.']};

%------------------------------------------------------------------------
% File selection for Phase/Magnitude field map data

shortphase.type = 'files';
shortphase.name = 'Short Echo Phase Image';
shortphase.tag  = 'shortphase';
shortphase.num  = [1 1];
shortphase.filter = 'image';
shortphase.help   = {['Select short echo phase image']};

shortmag.type = 'files';
shortmag.name = 'Short Echo Magnitude Image';
shortmag.tag  = 'shortmag';
shortmag.num  = [1 1];
shortmag.filter = 'image';
shortmag.help   = {['Select short echo magnitude image']};

longphase.type = 'files';
longphase.name = 'Long Echo Phase Image';
longphase.tag  = 'longphase';
longphase.num  = [1 1];
longphase.filter = 'image';
longphase.help   = {['Select long echo phase image']};

longmag.type = 'files';
longmag.name = 'Long Echo Magnitude Image';
longmag.tag  = 'longmag';
longmag.num  = [1 1];
longmag.filter = 'image';
longmag.help   = {['Select long echo magnitude image']};

%------------------------------------------------------------------------
% File selection for Presubtracted Magnitude/Phase field map data
presubmag.type = 'files';
presubmag.name = 'Magnitude Image';
presubmag.tag  = 'magnitude';
presubmag.num  = [1 1];
presubmag.filter = 'image';
presubmag.help   = {['Select a single magnitude image']};

presubphase.type = 'files';
presubphase.name = 'Phase Image';
presubphase.tag  = 'phase';
presubphase.num  = [1 1];
presubphase.filter = 'image';
presubphase.help   = {['Select a single phase image. This should be the result from the ',...
'subtraction of two phase images (where the subtraction is usually done automatically by ',...
'the scanner software). The phase image will be scaled between +/- PI.']};

%------------------------------------------------------------------------
% File selection for Real/Imaginary field map data
shortreal.type = 'files';
shortreal.name = 'Short Echo Real Image';
shortreal.tag  = 'shortreal';
shortreal.num  = [1 1];
shortreal.filter = 'image';
shortreal.help   = {['Select short echo real image']};

shortimag.type = 'files';
shortimag.name = 'Short Echo Imaginary Image';
shortimag.tag  = 'shortimag';
shortimag.num  = [1 1];
shortimag.filter = 'image';
shortimag.help   = {['Select short echo imaginary image']};

longreal.type = 'files';
longreal.name = 'Long Echo Real Image';
longreal.tag  = 'longreal';
longreal.num  = [1 1];
longreal.filter = 'image';
longreal.help   = {['Select long echo real image']};

longimag.type = 'files';
longimag.name = 'Long Echo Imaginary Image';
longimag.tag  = 'longimag';
longimag.num  = [1 1];
longimag.filter = 'image';
longimag.help   = {['Select long echo imaginary image']};

%------------------------------------------------------------------------
% Options for doing segmentation used to create brain mask

template_filename = fullfile(spm('Dir'),'templates','T1.nii'); 
template.type = 'files';
template.name = 'Template image for brain masking';
template.tag = 'template';
template.num = [1 1];
template.filter = 'nii';
template.val = {template_filename};
template.help = {['Select template file for segmentation to create brain mask']};

fwhm.type = 'entry';
fwhm.name = 'FWHM';
fwhm.tag = 'fwhm';
fwhm.strtype = 'e';
fwhm.num = [1 1];
fwhm.val = {5};
fwhm.help = {'FWHM of Gaussian filter for smoothing brain mask.'};

nerode.type = 'entry';
nerode.name = 'Number of erosions';
nerode.tag = 'nerode';
nerode.strtype = 'e';
nerode.num = [1 1];
nerode.val = {1};
nerode.help = {'Number of erosions used to create brain mask.'};

ndilate.type = 'entry';
ndilate.name = 'Number of dilations';
ndilate.tag = 'ndilate';
ndilate.strtype = 'e';
ndilate.num = [1 1];
ndilate.val = {2};
ndilate.help = {'Number of dilations used to create brain mask.'};

thresh.type = 'entry';
thresh.name = 'Threshold';
thresh.tag = 'thresh';
thresh.strtype = 'e';
thresh.num = [1 1];
thresh.val = {0.5};
thresh.help = {'Threshold used to create brain mask from segmented data.'};

reg.type = 'entry';
reg.name = 'Regularization';
reg.tag = 'reg';
reg.strtype = 'e';
reg.num = [1 1];
reg.val = {0.02};
reg.help = {'Regularization value used in the segmentation. A larger value helps the segmentation to converge.'};

mflags.type = 'branch';
mflags.name = 'mflags';
mflags.tag  = 'mflags';
mflags.val  = {template,fwhm,nerode,ndilate,thresh,reg};
mflags.help = {['Different options used for the segmentation and creation of the brain mask.']};

%------------------------------------------------------------------------
% Options for phase unwrapping and processing field map
method.type = 'menu';
method.name = 'Unwrapping method';
method.tag = 'method';
method.labels = {'Mark3D','Mark2D','Huttonish'};
method.values = {'Mark3D' 'Mark2D' 'Huttonish'};
method.val = {'Mark3D'};
method.help = {'Select method for phase unwrapping'};

fwhm.type = 'entry';
fwhm.name = 'FWHM';
fwhm.tag = 'fwhm';
fwhm.strtype = 'e';
fwhm.num = [1 1];
fwhm.val = {10};
fwhm.help = {'FWHM of Gaussian filter used to implement weighted smoothing of unwrapped maps.'};

pad.type = 'entry';
pad.name = 'pad';
pad.tag = 'pad';
pad.strtype = 'e';
pad.num = [1 1];
pad.val = {0};
pad.help = {'Size of padding kernel if required.'};

ws.type='menu';
ws.name = 'Weighted smoothing';
ws.tag  = 'ws';
ws.labels = {'Weighted Smoothing','No weighted smoothing'};
ws.values = {1 0};
ws.val = {1};
ws.help = {'Select normal or weighted smoothing.'};

uflags.type = 'branch';
uflags.name = 'uflags';
uflags.tag  = 'uflags';
uflags.val  = {method,fwhm,pad,ws};
uflags.help = {['Different options for phase unwrapping and field map processing']};

%------------------------------------------------------------------------
% Short and long echo times 
et.type='entry';
et.name = 'Echo times [short TE long TE]';
et.tag  = 'et';
et.strtype = 'e';
et.num = [1 2];
et.help = {'Enter the short and long echo times (in ms) of the data used to acquire the field map.'};

%------------------------------------------------------------------------
% Brain masking
maskbrain.type='menu';
maskbrain.name = 'Mask brain';
maskbrain.tag  = 'maskbrain';
maskbrain.labels = {'Mask brain','No brain masking'};
maskbrain.values = {1 0};
maskbrain.help = {'Select masking or no masking of the brain. If masking is selected,',...
'the magnitude image is used to generate a mask of the brain.'};

%------------------------------------------------------------------------
% Blip direction
blipdir.type='menu';
blipdir.name = 'Blip direction';
blipdir.tag  = 'blipdir';
blipdir.labels = {'-1','1'};
blipdir.values = {-1 1};
blipdir.help = {['Enter the blip direction. This is the polarity of the phase-encode blips',...
'describing the direction in which k-space is traversed along the y-axis',...
'during EPI acquisition with respect to the coordinate system used in SPM.',...
'In this coordinate system, the phase encode direction corresponds with the',...
'y-direction and is deﬁned as positive from the posterior to the anterior of the',...
'head.']};

%------------------------------------------------------------------------
% Total EPI readout time
tert.type='entry';
tert.name = 'Total EPI readout time';
tert.tag  = 'tert';
tert.strtype = 'e';
tert.num = [1 1];
tert.help = {'Enter the total EPI readout time (in ms). This is the time taken to',...
'acquire all of the phase encode steps required to cover k-space (ie one image slice).',...
'For example, if the EPI sequence has 64 phase encode steps, the total readout time is',...
'the time taken to acquire 64 echoes, e.g.',...
'total readout time = number of echoes × echo spacing.',...
'This time does not include i) the duration of the excitation, ii) the delay between,'...
'the excitation and the start of the acquisition or iii) time for fat saturation etc.'};

%------------------------------------------------------------------------
% EPI-based field map or not?
epifm.type='menu';
epifm.name = 'EPI-based field map?';
epifm.tag  = 'epifm';
epifm.labels = {'non-EPI','EPI'};
epifm.values = {0 1};
epifm.help = {['Select non-EPI or EPI based field map. The field map data may be acquired using a non-EPI sequence (typically a',...
'gradient echo sequence) or an EPI sequence. The processing will be slightly different',...
'for the two cases. If using an EPI-based ﬁeld map, the resulting Voxel Displacement',...
'Map will be inverted since the ﬁeld map was acquired in distorted space.']};

%------------------------------------------------------------------------
% Jacobian modulation
ajm.type='menu';
ajm.name = 'Jacobian modulation?';
ajm.tag  = 'ajm';
ajm.labels = {'Do not use','Use'};
ajm.values = {0 1};
ajm.val = {0};
ajm.help = {['Select whether or not to use Jacobian modulation. This will adjust',...
'the intensities of voxels that have been stretched or compressed but in general is',...
'not recommended for EPI distortion correction']};

%------------------------------------------------------------------------
% Defaults values used for field map creation
defaultsvals.type = 'branch';
defaultsvals.name = 'Defaults values';
defaultsvals.tag  = 'defaultsval';
defaultsvals.val  = {et,maskbrain,blipdir,tert,epifm,ajm,uflags,mflags};
defaultsvals.help = {['Defaults values']};

%------------------------------------------------------------------------
% Defaults parameter file used for field map creation
[default_file_path, tmpname] = fileparts(mfilename('fullpath'));
default_filename = sprintf('%s%s%s',default_file_path,filesep,'pm_defaults.m'); 
defaultsfile.type = 'files';
defaultsfile.name = 'Defaults File';
defaultsfile.tag  = 'defaultsfile';
defaultsfile.num  = [1 1];
defaultsfile.filter  = 'm';
defaultsfile.ufilter = '^pm_defaults.*\.m$';
defaultsfile.val = {default_filename};
defaultsfile.dir = default_file_path;
defaultsfile.help = {[...
'Select the ''pm_defaults*.m'' file containing the parameters for the field map data. ',...
'Please make sure that the parameters defined in the defaults file are correct for ',...
'your field map and EPI sequence. To create your own defaults file, either edit the '...
'distributed version and/or save it with the name ''pm_defaults_yourname.m''.']};

%------------------------------------------------------------------------
% Choice for defaults input 
defaults.type = 'choice';
defaults.name = 'FieldMap defaults';
defaults.tag = 'defaults';
defaults.values = {defaultsvals, defaultsfile};
defaults.help = {['FieldMap default values can be entered as a file or set of values.']};

%-----------------------------------------------------------------------
% Match anatomical image
matchanat.type = 'menu';
matchanat.name = 'Match anatomical image to EPI?';
matchanat.tag  = 'matchanat';
matchanat.labels = {'match anat', 'none'};
matchanat.values = {1,0};
matchanat.val = {0};
matchanat.help = {[...
'Match the anatomical image to the distortion corrected EPI. This can be done',...
'to allow for visual inspection and comparison of the distortion corrected EPI.']};

%------------------------------------------------------------------------
% Select anatomical image for display and comparison
anat.type = 'files';
anat.name = 'Select anatomical image for comparison';
anat.tag  = 'anat';
anat.filter = 'image';
anat.num  = [0 1];
anat.val  = {''};
anat.help = {[...
'Select an anatomical image for comparison with the distortion corrected EPI.']};

%-----------------------------------------------------------------------
% Write unwarped EPI image
writeunwarped.type = 'menu';
writeunwarped.name = 'Write unwarped EPI?';
writeunwarped.tag  = 'writeunwarped';
writeunwarped.labels = {'write unwarped EPI', 'none'};
writeunwarped.values = {1,0};
writeunwarped.help = {[...
'Write out distortion corrected EPI image. The image is saved with the prefix u.']};

%-----------------------------------------------------------------------
% Name 
sessname.type = 'entry';
sessname.name = 'Name extension for session specific vdm files';
sessname.tag  = 'sessname';
sessname.strtype = 's';
sessname.num = [1 Inf];
sessname.val = {'session'};
sessname.help = {['This will be the name extension followed by an incremented',...
'integer for session specific vdm files.']};

%-----------------------------------------------------------------------
% Match VDM file to EPI image
matchvdm.type = 'menu';
matchvdm.name = 'Match VDM to EPI?';
matchvdm.tag  = 'matchvdm';
matchvdm.labels = {'match vdm', 'none'};
matchvdm.values = {1,0};
matchvdm.help = {[...
'Match VDM file to EPI image. This option will coregister the field map data ',...
'to the selected EPI before doing distortion correction.']};

%------------------------------------------------------------------------
% Select a single EPI to unwarp
epi.type = 'files';
epi.name = 'Select EPI to Unwarp';
epi.tag  = 'epi';
epi.filter = 'image';
epi.num  = [0 1];
epi.val  = {''};
epi.help = {[...
'Select an image to distortion correct. The corrected image will be saved',...
'with the prefix u. The original and the distortion corrected images can be',...
'displayed for comparison.']};

%------------------------------------------------------------------------
% Other options that are not included in the defaults file
% Define precalculated field map type of job
session.type = 'branch';
session.name = 'Session';
session.tag  = 'session';
session.val  = {epi};
session.help = {'Data for this session.'};

epi_session.type = 'repeat';
epi_session.name = 'EPI Sessions';
epi_session.values  = {session};
epi_session.num  = [1 Inf];
epi_session.help = {[...
'If a single VDM file will be used for multiple sessions, select the first EPI',...
'in each session. A copy of the VDM file will be matched to the first EPI in each',...
'session and save with a seprate name.']};

%------------------------------------------------------------------------
% If using precalculated field map and want to do a matching, need the
% magnitude image in same space as precalculated field map
magfieldmap.type = 'files';
magfieldmap.name = 'Select magnitude image in same space as fieldmap';
magfieldmap.tag  = 'magfieldmap';
magfieldmap.filter = 'image';
magfieldmap.num  = [0 1];
magfieldmap.val  = {''};
magfieldmap.help = {[...
'Select magnitude image which is in the same space as the field map to do matching to EPI']};

%------------------------------------------------------------------------
% Define precalculated field map type of job
subj.type = 'branch';
subj.name = 'Subject';
subj.tag  = 'subj';
subj.val  = {precalcfieldmap,magfieldmap,defaults,epi_session,matchvdm,sessname,writeunwarped,anat,matchanat};
subj.help = {'Data for this subject or field map session.'};

data.type = 'repeat';
data.name = 'Data';
data.values = {subj};
data.num  = [1 Inf];
data.help = {['Subjects or sessions for which individual field map data has been acquired.']};

precalcfieldmap.type = 'branch';
precalcfieldmap.name = 'Precalculated FieldMap (in Hz)';
precalcfieldmap.tag  = 'precalcfieldmap';
precalcfieldmap.val  = {data};
precalcfieldmap.prog = @fieldmap_precalcfieldmap;
precalcfieldmap.help = {[...
'Calculate a voxel displacement map (VDM) from a precalculated field map. This option ',...
'expects a processed field map (ie phase unwrapped, masked if necessary and scaled to Hz). ',...
'Precalculated field maps can be generated by the FieldMap toolbox and stored as fpm_* files.']};

%------------------------------------------------------------------------
% Define phase/magnitude type of job, double phase and magnitude file
subj.type = 'branch';
subj.name = 'Subject';
subj.tag  = 'subj';
subj.val  = {shortphase,shortmag,longphase,longmag,defaults,epi_session,matchvdm,sessname,writeunwarped,anat,matchanat};
subj.help = {['Data for this subject or field map session.']};

data.type = 'repeat';
data.name = 'Data';
data.values = {subj};
data.num  = [1 Inf];
data.help = {['Subjects or sessions for which individual field map data has been acquired.']};

phasemag.type = 'branch';
phasemag.name = 'Phase and Magnitude Data';
phasemag.tag  = 'phasemag';
phasemag.val  = {data};
phasemag.prog = @fieldmap_phasemag;
phasemag.help = {[...
'Calculate a voxel displacement map (VDM) from double phase and magnitude field map data.'...
'This option expects two phase and magnitude pairs of data of two different ',...
'echo times.']};

%------------------------------------------------------------------------
% Define phase/magnitude type of job, presubtracted phase and single magnitude file
subj.type = 'branch';
subj.name = 'Subject';
subj.tag  = 'subj';
subj.val  = {presubphase,presubmag,defaults,epi_session,matchvdm,sessname,writeunwarped,anat,matchanat};
subj.help = {['Data for this subject or field map session.']};

data.type = 'repeat';
data.name = 'Data';
data.values = {subj};
data.num  = [1 Inf];
data.help = {['Subjects or sessions for which individual field map data has been acquired.']};

presubphasemag.type = 'branch';
presubphasemag.name = 'Presubtracted Phase and Magnitude Data';
presubphasemag.tag  = 'presubphasemag';
presubphasemag.val  = {data};
presubphasemag.prog = @fieldmap_presubphasemag;
presubphasemag.help = {[...
'Calculate a voxel displacement map (VDM) from presubtracted phase and magnitude field map data. ',...
'This option expects a single magnitude image and a single phase image resulting from the ',...
'subtraction of two phase images (where the subtraction is usually done automatically by ',...
'the scanner software). The phase image will be scaled between +/- PI.']};

%------------------------------------------------------------------------
% Define real/imaginary type of job
subj.type = 'branch';
subj.name = 'Subject';
subj.tag  = 'subj';
subj.val  = {shortreal,shortimag,longreal,longimag,defaults,epi_session,matchvdm,sessname,writeunwarped,anat,matchanat};
subj.help = {['Data for this subject or field map session.']};

data.type = 'repeat';
data.name = 'Data';
data.values = {subj};
data.num  = [1 Inf];
data.help = {['Subjects or sessions for which individual field map data has been acquired.']};

realimag.type = 'branch';
realimag.name = 'Real and Imaginary Data';
realimag.tag  = 'realimag';
realimag.val  = {data};
realimag.prog = @fieldmap_realimag;
realimag.help = {[...
'Calculate a voxel displacement map (VDM) from real and imaginary field map data. ',...
'This option expects two real and imaginary pairs of data of two different ',...
'echo times.']};

%------------------------------------------------------------------------
% Define field map job
job.type = 'choice';
job.name = 'FieldMap';
job.tag  = 'fieldmap';
job.values = {presubphasemag,realimag,phasemag,precalcfieldmap};
p1 = [...
'The FieldMap toolbox generates unwrapped field maps which are converted to ',...
'voxel displacement maps (VDM) that can be used to unwarp geometrically ',...
'distorted EPI images. For references and an explantion of the theory behind the field map based ',...
'unwarping, see FieldMap_principles.man. ',...
'The resulting VDM files are saved with the prefix vdm and can be used in combination with Realign & Unwarp ',...
'to calculate and correct for the combined effects of static and movement-related ',...
'susceptibility induced distortions.'];
job.help = {p1,''};

%------------------------------------------------------------------------
function fieldmap_presubphasemag(job)
FieldMap_Run(job.subj);
%------------------------------------------------------------------------
function fieldmap_realimag(job)
FieldMap_Run(job.subj);
%------------------------------------------------------------------------
function fieldmap_phasemag(job)
Fieldmap_Run(job.subj);
%------------------------------------------------------------------------
function fieldmap_precalcfieldmap(job)
FieldMap_Run(job.subj);
%------------------------------------------------------------------------

        







